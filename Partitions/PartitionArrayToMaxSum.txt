public class Solution {
    
    int[] dp;
    int[] arr; 
    int k;
    public int MaxSumAfterPartitioning(int[] arr, int k) 
    {
        this.k = k;
        this.arr = arr;
        dp = new int[arr.Length];
        Array.Fill(dp, -1);
        
        int ans = Solve(0);
        return ans;
    }
    
    public int Solve(int index)
    {
        if (index == arr.Length)
            return 0;
        
        if (dp[index] != -1)
            return dp[index];
        
        int ans = 0;
        int max = 0;
        for (int i = index; i < Math.Min(arr.Length, index+k); i++)
        {
            max = Math.Max(max, arr[i]);
            ans = Math.Max(ans, max * (i - index + 1) + Solve(i+1));
        }
        
        dp[index] = ans;
        return ans;
    }
}
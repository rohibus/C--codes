public class Solution {
    
    int[][][] dp;
    
    public int MaxProfit(int k, int[] prices) 
    {
        dp = new int[prices.Length+1][][];

        for (int i = 0; i <= prices.Length; i++)
        {
            dp[i] = new int[2][];
            dp[i][0] = new int[k+1];
            dp[i][1] = new int[k+1];
            
            Array.Fill(dp[i][0], -1);
            Array.Fill(dp[i][1], -1);
        }
        
        return Solve(0, k, prices, 1);
    }
    
    public int Solve(int index, int k, int[] prices, int buy)
    {
        if (index == prices.Length)
            return 0;
        
        if (dp[index][buy][k] != -1)
            return dp[index][buy][k];
        
        
        int ans = Solve(index+1, k, prices, buy);                                               //Neither buy nor sell
        
        if (k == 0)
            return 0;
        
        
        if (buy == 1)                                                                           //buy
        {
            ans = Math.Max(ans, -prices[index] + Solve(index+1, k, prices, 0));
        }
        else
        {
            ans = Math.Max(ans, prices[index] + Solve(index+1, k-1, prices, 1));                //sell
        }
        
        dp[index][buy][k] = ans;
        return ans;
    }
}